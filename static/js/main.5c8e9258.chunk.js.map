{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","fontSize","Contacts","contacts_Contact","Header","branding","href","defaultProps","About","NotFound","Test","test","fetch","then","response","json","body","title","_this$state","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classNames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0SAGMA,EAAUC,IAAMC,gBAEhBC,EAAW,SAACC,EAAOC,GACvB,OAAOA,EAAOC,MACZ,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAErE,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,QAAQD,GAAMD,EAAUN,EAAOQ,QAAWF,MAE5G,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAH9De,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAcsBC,IAAMC,IAAI,8CAdhC,OAcUN,EAdVE,EAAAK,KAgBI9B,KAAKY,SAAS,CAACzB,SAAUoC,EAAIQ,OAhBjC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAoBI,OACEiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKmC,MAAMC,cAtBpBzC,EAAA,CAA8B0C,aA6BjBC,EAAW5D,EAAQ4D,SCmBjBC,6MAnEbzD,MAAQ,CACN0D,iBAAiB,KAGnBC,YAAc,SAACC,GACb5C,EAAKc,SAAS,CAAE4B,iBAAkB1C,EAAKhB,MAAM0D,qBAG/CG,oDAAgB,SAAArB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAERC,IAAMgB,OAAN,8CAAApD,OAA2DF,IAFnD,OAIdqB,EAAS,CAAC3B,KAAM,iBAAkBO,QAASD,IAJ7B,wBAAAmC,EAAAO,SAAAV,sIAQP,IAAAuB,EAAA7C,KAAA8C,EAC4B9C,KAAKmC,MAAM9C,QAAtCC,EADDwD,EACCxD,GAAIyD,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBT,EAAoBxC,KAAKlB,MAAzB0D,gBAER,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,uBACbjB,EAAAb,EAAAc,cAAA,UAAKa,EAAM,IACTd,EAAAb,EAAAc,cAAA,KACEiB,QAASN,EAAKJ,YAAaS,UAAU,mBACrCE,MAAO,CAAEC,OAAQ,aAEnBpB,EAAAb,EAAAc,cAAA,KACEgB,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDJ,QAASN,EAAKF,cAAca,KAAKX,EAAMvD,EAAIqB,KAE7CsB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAE,gBAAAlE,OAAkBF,IACxB2C,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,oBACVE,MAAO,CACLC,OAAO,UACPC,MAAO,QACPC,MAAO,QACPI,YAAa,OACbC,SAAU,YAKlBpB,EACCP,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,cACZjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBAAmBF,GACjCf,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBAAmBD,IAElC,eAtDKZ,aCqBPwB,mLArBX,OACE5B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACA7B,EAAa6B,EAAb7B,SACR,OACE8C,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,kBAAiBjB,EAAAb,EAAAc,cAAA,QAAMgB,UAAU,eAAhB,WAA/B,SACC/D,EAASO,IAAI,SAAAL,GAAO,OACnB4C,EAAAb,EAAAc,cAAC4B,EAAD,CACE/C,IAAK1B,EAAQC,GACbD,QAASA,gBAbJgD,aCCjB0B,EAAS,SAAC5B,GAAU,IAChB6B,EAAa7B,EAAb6B,SACR,OACE/B,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,2DACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,KAAG+B,KAAK,IAAIf,UAAU,gBAAgBc,GACtC/B,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,sBACZjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YAAWjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,gBAA/C,UAEFjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAAWjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,gBAA1D,SAEFjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAAWjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,oBAApD,gBASda,EAAOG,aAAe,CACpBF,SAAU,UAQGD,QC1BAI,EAVD,SAAChC,GACb,OACEF,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,aAAd,yBACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,iCACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,kBAAb,mBCISkB,EATE,WACf,OACEnC,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,aAAd,sBACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,sCCwBSmB,6MA1BbvF,MAAQ,CACNwF,KAAM,2FAGY,IAAAzB,EAAA7C,KAClBuE,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAzC,GAAI,OAAIc,EAAKjC,SAAS,CAC1B+D,KAAM5C,EAAK4C,KACXC,MAAO7C,EAAK6C,2CAMT,IAAAC,EACiB7E,KAAKlB,MAArB8F,EADDC,EACCD,MAAOD,EADRE,EACQF,KACf,OACE1C,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,UAAK0C,GACL3C,EAAAb,EAAAc,cAAA,SAAIyC,WAtBOtC,sCCGbyC,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAjC,EAMIgC,EANJhC,KACA/B,EAKI+D,EALJ/D,MACAiE,EAIIF,EAJJE,YACAjG,EAGI+F,EAHJ/F,KACAkG,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACAlD,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,cACbjB,EAAAb,EAAAc,cAAA,SAAOkD,QAAQ,QAAQJ,GACvB/C,EAAAb,EAAAc,cAAA,SACElD,KAAMA,EACN+D,KAAMA,EACNG,UAAWmC,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbjE,MAAOA,EACPkE,SAAUA,IAEXC,GAASlD,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,oBAAoBiC,KAcjDL,EAAeZ,aAAe,CAC5BlF,KAAM,QAGO8F,QC6DAS,oNAnGbzG,MAAQ,CACNiE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPuC,OAAQ,MAGVN,SAAW,SAAAxC,GAAC,OAAI5C,EAAKc,SAAL3B,OAAAwG,EAAA,EAAAxG,CAAA,GAAiByD,EAAEgD,OAAO3C,KAAOL,EAAEgD,OAAO1E,WAE1D2E,+CAAW,SAAArE,EAAOX,EAAU+B,GAAjB,IAAAmC,EAAA9B,EAAAC,EAAAC,EAAA2C,EAAArE,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTe,EAAEmD,iBADOhB,EAEsB/E,EAAKhB,MAA5BiE,EAFC8B,EAED9B,KAAMC,EAFL6B,EAEK7B,MAAOC,EAFZ4B,EAEY5B,MAGR,KAATF,EALK,CAAAtB,EAAAE,KAAA,eAMP7B,EAAKc,SAAS,CAAC4E,OAAQ,CAAEzC,KAAM,sBANxBtB,EAAAqE,OAAA,oBASK,KAAV9C,EATK,CAAAvB,EAAAE,KAAA,eAUP7B,EAAKc,SAAS,CAAC4E,OAAQ,CAAExC,MAAO,uBAVzBvB,EAAAqE,OAAA,oBAaK,KAAV7C,EAbK,CAAAxB,EAAAE,KAAA,gBAcP7B,EAAKc,SAAS,CAAC4E,OAAQ,CAAEvC,MAAO,uBAdzBxB,EAAAqE,OAAA,yBAkBFF,EAAa,CAClB7C,OACAC,QACAC,SArBOxB,EAAAE,KAAA,GAwBSC,IAAMmE,KAAK,6CAA8CH,GAxBlE,QAwBHrE,EAxBGE,EAAAK,KA0BTnB,EAAS,CAAC3B,KAAM,cAAeO,QAASgC,EAAIQ,OAG5CjC,EAAKc,SAAS,CACZmC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPuC,OAAQ,KAGV1F,EAAKqC,MAAM6D,QAAQC,KAAK,KApCf,yBAAAxE,EAAAO,SAAAV,sIAuCF,IAAAuB,EAAA7C,KAAAkG,EACgClG,KAAKlB,MAApCiE,EADDmD,EACCnD,KAAMC,EADPkD,EACOlD,MAAOC,EADdiD,EACcjD,MAAOuC,EADrBU,EACqBV,OAE5B,OACEvD,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACfjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eAAf,eAGAjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,QAAMyD,SAAU9C,EAAK8C,SAASnC,KAAKX,EAAMlC,IACvCsB,EAAAb,EAAAc,cAACiE,EAAD,CACEnB,MAAM,OACNjC,KAAK,OACLkC,YAAY,aACZjE,MAAO+B,EACPmC,SAAUrC,EAAKqC,SACfC,MAAOK,EAAOzC,OAEhBd,EAAAb,EAAAc,cAACiE,EAAD,CACEnB,MAAM,QACNjC,KAAK,QACL/D,KAAK,QACLiG,YAAY,cACZjE,MAAOgC,EACPkC,SAAUrC,EAAKqC,SACfC,MAAOK,EAAOxC,QAEhBf,EAAAb,EAAAc,cAACiE,EAAD,CACEnB,MAAM,QACNjC,KAAK,QACLkC,YAAY,cACZjE,MAAOiC,EACPiC,SAAUrC,EAAKqC,SACfC,MAAOK,EAAOvC,QAGhBhB,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASgC,MAAM,cAAckC,UAAU,wCAzF1Cb,cCmHV+D,6MAnHbtH,MAAQ,CACNiE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPuC,OAAQ,MAiBVN,SAAW,SAAAxC,GAAC,OAAI5C,EAAKc,SAAL3B,OAAAwG,EAAA,EAAAxG,CAAA,GAAiByD,EAAEgD,OAAO3C,KAAOL,EAAEgD,OAAO1E,WAE1D2E,+CAAW,SAAArE,EAAOX,EAAU+B,GAAjB,IAAAmC,EAAA9B,EAAAC,EAAAC,EAAAoD,EAAA/G,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTe,EAAEmD,iBADOhB,EAEsB/E,EAAKhB,MAA5BiE,EAFC8B,EAED9B,KAAMC,EAFL6B,EAEK7B,MAAOC,EAFZ4B,EAEY5B,MAGR,KAATF,EALK,CAAAtB,EAAAE,KAAA,eAMP7B,EAAKc,SAAS,CAAC4E,OAAQ,CAAEzC,KAAM,sBANxBtB,EAAAqE,OAAA,oBASK,KAAV9C,EATK,CAAAvB,EAAAE,KAAA,eAUP7B,EAAKc,SAAS,CAAC4E,OAAQ,CAAExC,MAAO,uBAVzBvB,EAAAqE,OAAA,oBAaK,KAAV7C,EAbK,CAAAxB,EAAAE,KAAA,gBAcP7B,EAAKc,SAAS,CAAC4E,OAAQ,CAAEvC,MAAO,uBAdzBxB,EAAAqE,OAAA,yBAkBHO,EAAa,CACjBtD,OACAC,QACAC,SAGM3D,EAAOQ,EAAKqC,MAAMmE,MAAMC,OAAxBjH,GAxBCmC,EAAAE,KAAA,GA0BSC,IAAM4E,IAAN,8CAAAhH,OAAwDF,GAAM+G,GA1BvE,QA0BH9E,EA1BGE,EAAAK,KA4BTnB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAGhDjC,EAAKc,SAAS,CACZmC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPuC,OAAQ,KAGV1F,EAAKqC,MAAM6D,QAAQC,KAAK,KAtCf,yBAAAxE,EAAAO,SAAAV,0QAfDhC,EAAOU,KAAKmC,MAAMmE,MAAMC,OAAxBjH,YAEUsC,IAAMC,IAAN,8CAAArC,OAAwDF,WAApEiC,SAEAlC,EAAUkC,EAAIQ,KAEpB/B,KAAKY,SAAS,CACZmC,KAAM1D,EAAQ0D,KACdC,MAAO3D,EAAQ2D,MACfC,MAAO5D,EAAQ4D,2IA+CV,IAAAJ,EAAA7C,KAAAkG,EACgClG,KAAKlB,MAApCiE,EADDmD,EACCnD,KAAMC,EADPkD,EACOlD,MAAOC,EADdiD,EACcjD,MAAOuC,EADrBU,EACqBV,OAE5B,OACEvD,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACfjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eAAf,gBAGAjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,QAAMyD,SAAU9C,EAAK8C,SAASnC,KAAKX,EAAMlC,IACvCsB,EAAAb,EAAAc,cAACiE,EAAD,CACEnB,MAAM,OACNjC,KAAK,OACLkC,YAAY,aACZjE,MAAO+B,EACPmC,SAAUrC,EAAKqC,SACfC,MAAOK,EAAOzC,OAEhBd,EAAAb,EAAAc,cAACiE,EAAD,CACEnB,MAAM,QACNjC,KAAK,QACL/D,KAAK,QACLiG,YAAY,cACZjE,MAAOgC,EACPkC,SAAUrC,EAAKqC,SACfC,MAAOK,EAAOxC,QAEhBf,EAAAb,EAAAc,cAACiE,EAAD,CACEnB,MAAM,QACNjC,KAAK,QACLkC,YAAY,cACZjE,MAAOiC,EACPiC,SAAUrC,EAAKqC,SACfC,MAAOK,EAAOvC,QAGhBhB,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASgC,MAAM,iBAAiBkC,UAAU,wCAzG5Cb,aCoCXoE,gMAtBX,OACExE,EAAAb,EAAAc,cAACwE,EAAD,KACEzE,EAAAb,EAAAc,cAACuB,EAAA,EAAD,KACExB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,OACbjB,EAAAb,EAAAc,cAACyE,EAAD,CAAQ3C,SAAS,oBACjB/B,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,KACE3E,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlD,IACjC5B,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWxB,IAC5CtD,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWX,IACjDnE,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW5C,IACtClC,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAW1C,IACrCpC,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOG,UAAW3C,gBAdhB/B,cCLE2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2DCbNc,IAASC,OAAOpF,EAAAb,EAAAc,cAACoF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnD,KAAK,SAAAoD,GACjCA,EAAaC","file":"static/js/main.5c8e9258.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer  = (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      }\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      }\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  //Standard solution using axios\r\n  /* componentDidMount() {\r\n    axios.get('https://jsonplaceholder.typicode.com/users')\r\n      .then(res => this.setState({ contacts: res.data }))\r\n  } */\r\n\r\n  //Async Await\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({contacts: res.data});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport propTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = (e) => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  }\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    \r\n    dispatch({type: 'DELETE_CONTACT', payload: id})\r\n\r\n  }\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name}{' '}\r\n                <i \r\n                  onClick={this.onShowClick} className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }} \r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i className=\"fas fa-pencil-alt\" \r\n                     style={{\r\n                       cursor:'pointer',\r\n                       float: 'right',\r\n                       color: 'black',\r\n                       marginRight: '1rem',\r\n                       fontSize: '18px'\r\n                     }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ): null}\r\n            </div>     \r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: propTypes.object.isRequired,\r\n  \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <div>\r\n              <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n              {contacts.map(contact => (\r\n                <Contact \r\n                  key={contact.id}\r\n                  contact={contact}\r\n                />\r\n              ))}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: propTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About \r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <p className=\"lead\">Sorry. This page does not exist.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n\r\n  state = {\r\n    test: 'test'\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        body: data.body,\r\n        title: data.title\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\n// const classNames = require('classnames');\r\nimport classNames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type, \r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"name\">{label}</label>\r\n    <input\r\n      type={type}\r\n      name={name}\r\n      className={classNames('form-control form-control-lg', {\r\n        'is-invalid': error\r\n      })}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n    {error && <div className=\"invalid-feedback\">{error}</div>}\r\n  </div>\r\n  )\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport {v1 as uuid } from \"uuid\";\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === '') {\r\n      this.setState({errors: { name: 'Name is required' }});\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({errors: { email: 'Email is required' }});\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({errors: { phone: 'Phone is required' }});\r\n      return;\r\n    }\r\n\r\n    const  newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n    dispatch({type: 'ADD_CONTACT', payload: res.data })\r\n    \r\n    //Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-header\">\r\n              Add Contact\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                  />\r\n                <TextInputGroup\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                  />\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"Enter Phone\"\r\n                  value={phone}\r\n                  onChange={this.onChange}\r\n                  error={errors.phone}\r\n                />\r\n                \r\n                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === '') {\r\n      this.setState({errors: { name: 'Name is required' }});\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({errors: { email: 'Email is required' }});\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({errors: { phone: 'Phone is required' }});\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email, \r\n      phone\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n    \r\n    //Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-header\">\r\n              Edit Contact\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                  />\r\n                <TextInputGroup\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                  />\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"Enter Phone\"\r\n                  value={phone}\r\n                  onChange={this.onChange}\r\n                  error={errors.phone}\r\n                />\r\n                \r\n                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Contacts from './components/contacts/Contacts';\r\nimport Header from './components/layout/Header';\r\nimport About from './components/pages/About';\r\nimport NotFound from './components/pages/NotFound';\r\nimport Test from './components/test/Test';\r\n\r\nimport AddContact from './components/contacts/AddContact';\r\nimport EditContact from './components/contacts/EditContact';\r\n\r\nimport { Provider } from './context';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header branding=\"Contact Manager\" />\r\n            <div className=\"container\">  \r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/contact/add\" component={AddContact} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route exact path=\"/test\" component={Test} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}